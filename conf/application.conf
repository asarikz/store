# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="Bg99/gQQFJ5rEA?Aalopuae0;u^Tc[ssEyKCVFERk;;6TNnM:Vnyw0PF9R:X5Tf8"

# The application languages
# ~~~~~
application.langs="en,ja"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:mem:play"
#db.default.url="jdbc:h2:db"
#db.default.user=sa
#db.default.user=""

db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://postgres/store_db"
db.default.user="store_user"
db.default.password=""
db.default.logStatements=true

# For Cloud Foundry
db.default.url=${?cloud.services.postgres-fs.connection.uri}
db.default.password=${?cloud.services.postgres-fs.connection.password}
db.default.user=${?cloud.services.postgres-fs.connection.username}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
#logger.root=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG

# Item picture directory.
item.picture.path=itemPictures

# Login timeout in minute.
login.timeout.minute=30

# Mail settings.
order.email.from="noreply <xxx@xxx.xom>"
user.registration.email.from=${order.email.from}
prize.email.from=${order.email.from}
prize.email.to=${order.email.from}
smtp.host="smtp.gmail.com"
smtp.port=587

# Can change smtp host/port by environment variable if set.
smtp.host=${?SMTP_HOST}
smtp.port=${?SMTP_PORT}

smtp.ssl=true
smtp.user="xxx@xxx.xom"
smtp.password="xxxxxxxx"

# Can specify adiitional columns to query. You can add columns to sort by creating additional columns
item.list.query.columns.add=""

# Specify countries to ship to.
ship.to.countries = [JPN]

# Number of item attached files.
item.attached.file.count = 5

# Recommend engine settings
# Uncomment and change the following settings if you want to use recoeng.
#recoeng.host = "localhost"
#recoeng.port = "9001"

# Demo picture mode. If item pictures are not found in item picture directory, search into classpath.
item.picture.for.demo = true

# Max count of recommendation items shown in shopping cart.
recommend.maxCount = 5

# If true, login is needed for item query.
need.authentication.entirely = false

# If true, site owner can upload user csv.
siteOwnerCanUploadUserCsv = false

# Timeout duration for resetting password. Resetting password after this duration will fail.
resetPassword.timeout = 30 minutes

# Url base (used for hyper link in mail)
urlBase = "http://localhost:9000"

# Automatically login when user registration is completed. Default is false.
auto.login.after.registration = false

# This option affects user registration by csv handling.
# true: Company name column of store_user table is filled with site name of site table where site_id = companyId(in csv record).
# false: Company name of store_user is left null.
employee.csv.registration = false

# Length of item description. Since column type of item description is TEXT, no size limit is required on database side. This is used in form validation.
itemDescription.size = 2048

# Enable employee administration. Setting this option to true, site owner can edit their employee user. The user name of employee should be in 'n-x' format where n is store id (ex: 12-4817569: This user is an employee of site(site id = 12)).
siteOwnerCanEditEmployee = false

# Nasty hack. Since csrf token format of play 2.1 is not compatible to the one in play 2.3, user should
# manually clear cookies. But it is hard for end users. So just rename the cookie name to avoid this issue.
csrf.token.name=csrfToken1

# Specify buyer's user name pattern by regular expression
#normalUserNamePattern="[0-9]{8}"

# Specify supplemental category count per item. Default value = 10.
#maxSupplementalCategoryCountPerItem=20

# If set to true, shipping date is used for condition to query transactions (default = false).
# useShippingDateForAccountingBill = true

# If you want to use the API for facebook, set the following parameters.
# You can obtain the following parameters at https://developers.facebook.com
# Facebook App id
facebook.appId=xxxxx

# Facebook App secret
facebook.appSecret=xxxxx

# To request API, access token is required for authentication. Since
# access token will be expired, it is needed to be refreshed
# periodically. The default value is set to 1 hour (unfortunately, I
# cannot find access token expiration period in Facebook dev guide
# page, but it works at least current facebook API ;-).
facebook.accessToken.expiration=1h

# If you want to use the API for twitter, set the following parameters.
# You can obtain the following parameters at https://apps.twitter.com
twitter.consumerKey = "xxx"
twitter.secretKey = "xxx"
twitter.accessToken = "xxx"
twitter.accessTokenSecret= "xxx"

# By default, store owner cannot edit item properties.
# If you want store owner can edit item properties, set this to true.
storeOwnerCanModifyAllItemProperties = false

# Max count of supplemental email for a user. If supplemental emails
# are registered, notification mails are sent to all of them in
# addition to his or her primary email. Default is 0.
#maxCountOfSupplementalEmail = 10

# Setting this option true, anonymous users can purchase items. Default to false.
#anonymousUserPurchase = true

# Item price settings. Defaults to models.UnitPriceStrategy.
itemPriceStrategy {
  ANONYMOUS_BUYER {
    type = "models.ListPriceStrategy"
  }
# Means not logged in.
  GUEST {
    type = "models.ListPriceStrategy"
  }
}

# Acceptable tenders for users
# paypal: Paypal tender.
# accountingBill: Pay by accounting bill.
acceptableTenders {
  BUYER = ["ACCOUNTING_BILL"]
  SUPER_USER = ["ACCOUNTING_BILL"]
  SITE_OWNER = ["ACCOUNTING_BILL"]
  ANONYMOUS_BUYER = ["PAYPAL_WEB_PAYMENT_PLUS"]
# Not used.
  GUEST = ["PAYPAL_WEB_PAYMENT_PLUS"]
}

# Paypal account info.
# Used for express checkout.
paypal {
  apiUrl = "https://api-3t.sandbox.paypal.com/nvp"
  apiVersion = "124.0"
  user = "your user"
  password = "your password"
  signature = "your signature"
  redirectUrl = "https://www.sandbox.paypal.com/cgi-bin/webscr"
  localeCode = "JP"
}

# Used for web payment plus.
paypalWebPaymentPlus {
  paypalId = "your paypal id"
  requestUrl = "https://securepayments.sandbox.paypal.com/webapps/HostedSoleSolutionApp/webflow/sparta/hostedSoleSolutionProcess"
  debug = true
}

# Duration to preserve anonymous user records.
durationToPreserveAnonymousUser = 180 days

# Interval to check anonymous user records for removal.
intervalToCheckAnonymousUserRemoval = 1 days
